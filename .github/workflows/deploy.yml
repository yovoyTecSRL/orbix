#!/bin/bash

### 🧹 Script de Limpieza y Resolución de Conflictos para ORBIX ###
### Autor: Orbix AI – 2025 ###

set -e

BRANCH_MAIN="main"
BRANCH_BACKUP="proceso-creacion-orbix"

# Paso 1: Confirmar rama actual y guardar cambios
current_branch=$(git rev-parse --abbrev-ref HEAD)
echo "🌿 Rama actual: $current_branch"

echo "💾 Guardando cambios temporales si existen..."
git stash save "🔧 Backup automático antes de limpiar" || true

# Paso 2: Cambiar a rama principal y actualizar
echo "🔁 Cambiando a rama $BRANCH_MAIN"
git checkout $BRANCH_MAIN

echo "📥 Pull de cambios remotos"
git pull origin $BRANCH_MAIN

# Paso 3: Borrar archivos duplicados, backups y temporales
echo "🧽 Eliminando archivos innecesarios..."
rm -f ssh_setup_github_hetzner\ \(1\).sh orbix-sentinel.txt
rm -f *.tar.gz *.zip *.bak || true
rm -rf __pycache__

# Paso 4: Limpiar archivos no registrados por Git
echo "🧹 git clean"
git clean -f -d

# Paso 5: Resolver conflictos si quedaron marcados
if grep -q '<<<<<<<' main.py 2>/dev/null || grep -q '<<<<<<<' requirements.txt 2>/dev/null; then
  echo "⚠️ Aún hay conflictos en main.py o requirements.txt. Por favor edítalos manualmente."
  exit 1
fi

# Paso 6: Commit de limpieza y push a main
git add .
git commit -m "🧹 Limpieza automática de archivos y resolución preliminar"
git push origin $BRANCH_MAIN

# Paso 7: Actualizar rama de respaldo
echo "📦 Fusionando en rama de respaldo $BRANCH_BACKUP"
git checkout $BRANCH_BACKUP
git pull origin $BRANCH_BACKUP
git merge $BRANCH_MAIN || true

echo "📤 Enviando respaldo actualizado..."
git push origin $BRANCH_BACKUP

# Paso 8: Restaurar stash si había
if git stash list | grep -q "Backup automático"; then
  echo "♻️ Restaurando cambios stashed..."
  git stash pop || true
fi

echo "✅ Limpieza y sincronización completa."
