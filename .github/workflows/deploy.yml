
name: 🚀 Deploy Orbix AI to Hetzner

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  deploy:
    name: 📦 Build and Deploy Orbix AI
    runs-on: ubuntu-latest

    steps:
    - name: 📥 Checkout Repository
      uses: actions/checkout@v4

    - name: 🔧 Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: 🛠️ Build Docker Image
      run: |
        echo "🔨 Building Orbix AI Docker image..."
        docker build --pull --no-cache -t orbix-ai:latest .
        docker save orbix-ai:latest | gzip > orbix-ai.tar.gz

    - name: 📤 Deploy to Hetzner
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.HETZNER_IP }}
        username: root
        key: ${{ secrets.HETZNER_SSH_KEY }}
        port: 22
        timeout: 300s
        script: |
          set -e
          echo "🚀 Connecting to Hetzner..."

          # Preparar entorno
          mkdir -p /opt/orbix && cd /opt/orbix

          # Backup
          if [ -f docker-compose.yml ]; then
            echo "💾 Backing up docker-compose.yml..."
            docker-compose down || true
            cp docker-compose.yml docker-compose.backup.$(date +%Y%m%d_%H%M%S).yml || true
          fi

          # Git sync
          if [ ! -d .git ]; then
            git clone https://github.com/yovoyTecSRL/orbix.git .
          else
            git fetch origin
            git reset --hard origin/main
          fi

          # Dar permisos
          chmod +x *.sh || true

          # Detener y limpiar
          docker-compose down || true
          docker rm -f orbix-ai || true
          docker image prune -af || true

          # Build & deploy
          echo "🚀 Rebuilding containers..."
          docker-compose build --no-cache
          docker-compose up -d

          # Verificación
          echo "✅ Containers running:"
          docker ps
          echo "📄 Últimos logs:"
          docker-compose logs --tail=30 || true

          # Test automático
          if [ -f test_deployment.sh ]; then
            echo "🧪 Running deployment tests..."
            chmod +x test_deployment.sh
            ./test_deployment.sh
          else
            echo "🔍 Quick test: curl localhost"
            curl -f http://localhost/ || echo "⚠️ Could not connect yet."
          fi

          echo "✅ Deployment completed!"

    - name: 🔔 Notify Deployment Status
      if: always()
      run: |
        echo "📡 Deployment status: ${{ job.status }}"
        if [ "${{ job.status }}" == "success" ]; then
          echo "✅ Orbix AI deployed successfully to Hetzner!"
        else
          echo "❌ Deployment failed. Please check the logs."
        fi
